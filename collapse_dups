#!/bin/env perl6

my %count-for;

my $total-reads = 0;

for lines() -> $line
{
    my ($count, $seq) = parse-line($line); 
    %count-for{$seq} += $count;
    $total-reads     += $count;
}

my $previous-count = Inf;
my $rank           =   0;
my $uniq           =   0;
my $rpm            =   0;

for %count-for.sort( { $^b.value <=> $^a.value } ) -> $pair
{
    my ($seq, $count) = $pair.kv;
    if $count < $previous-count
    {
        # increment rank
        $rank++;

        # reset identifier that distinguishes sequences of the same rank
        $uniq = 1;

        # update "previous count" so that it will be accurate for the next iteration
        $previous-count = $count;
    }

    # Calculate reads per million
    my $rpm = $count * 10**6 / $total-reads;

    # print record
    say ">{$rank}($uniq)-{$count}-{$rpm}\n$seq";

    # Update identifier that distinguishes sequences of the same rank
    $uniq++;
}

sub parse-line ($line)
{
    if $line ~~ / (\d+) \s+ (\w+) /
    {
        return ($0, $1);
    }
    else {
        die 'could not parse line';
    }
}
